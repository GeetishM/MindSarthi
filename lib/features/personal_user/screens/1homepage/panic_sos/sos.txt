/* import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter_secure_storage/flutter_secure_storage.dart';
import 'package:url_launcher/url_launcher.dart';
import 'sos_helper.dart';

class SOSPage extends StatefulWidget {
  @override
  _SOSPageState createState() => _SOSPageState();
}

class _SOSPageState extends State<SOSPage> {
  final FirebaseFirestore _firestore = FirebaseFirestore.instance;
  final FlutterSecureStorage _storage = const FlutterSecureStorage();
  String? savedPreference;
  String? savedContactOrState;

  @override
  void initState() {
    super.initState();
    _loadUserPreference();
  }

  Future<void> _loadUserPreference() async {
    String? preference = await _storage.read(key: 'sos_preference');
    String? contactOrState = await _storage.read(key: 'sos_value');

    if (preference == null || contactOrState == null) {
      _showChoiceDialog();
    } else {
      setState(() {
        savedPreference = preference;
        savedContactOrState = contactOrState;
      });
    }
  }

  Future<void> _saveUserPreference(String preference, String value) async {
    await _storage.write(key: 'sos_preference', value: preference);
    await _storage.write(key: 'sos_value', value: value);
    await _firestore.collection('users').doc('user_sos_data').set({
      'preference': preference,
      'value': value,
    });
    setState(() {
      savedPreference = preference;
      savedContactOrState = value;
    });
  }

  void _showChoiceDialog() {
    showDialog(
      context: context,
      builder: (context) {
        return AlertDialog(
          title: Text("Select SOS Contact"),
          content: Column(
            mainAxisSize: MainAxisSize.min,
            children: [
              ListTile(
                title: Text("State Helpline"),
                onTap: () {
                  Navigator.pop(context);
                  _askForState();
                },
              ),
              ListTile(
                title: Text("Friend/Family"),
                onTap: () {
                  Navigator.pop(context);
                  _askForContact();
                },
              ),
            ],
          ),
        );
      },
    );
  }

  void _askForState() {
    TextEditingController stateController = TextEditingController();
    showDialog(
      context: context,
      builder: (context) {
        return AlertDialog(
          title: Text("Enter Your State"),
          content: TextField(controller: stateController, decoration: InputDecoration(hintText: "e.g., Maharashtra")),
          actions: [
            TextButton(
              onPressed: () async {
                String state = stateController.text.trim();
                if (state.isNotEmpty) {
                  await _saveUserPreference("helpline", state);
                }
                Navigator.pop(context);
              },
              child: Text("Save"),
            ),
          ],
        );
      },
    );
  }

  void _askForContact() {
    TextEditingController contactController = TextEditingController();
    showDialog(
      context: context,
      builder: (context) {
        return AlertDialog(
          title: Text("Enter Contact Number"),
          content: TextField(controller: contactController, keyboardType: TextInputType.phone, decoration: InputDecoration(hintText: "e.g., +91XXXXXXXXXX")),
          actions: [
            TextButton(
              onPressed: () async {
                String contact = contactController.text.trim();
                if (contact.isNotEmpty) {
                  await _saveUserPreference("friend", contact);
                }
                Navigator.pop(context);
              },
              child: Text("Save"),
            ),
          ],
        );
      },
    );
  }

  Future<void> _callSavedNumber() async {
    if (savedPreference == "helpline" && savedContactOrState != null) {
      String? helplineNumber = await HelplineService.getStateHelpline(savedContactOrState!);
      helplineNumber ??= "1800-599-0019";
      _makePhoneCall(helplineNumber);
    } else if (savedPreference == "friend" && savedContactOrState != null) {
      _makePhoneCall(savedContactOrState!);
    } else {
      _showChoiceDialog();
    }
  }

  Future<void> _makePhoneCall(String number) async {
    final Uri phoneUri = Uri(scheme: "tel", path: number);
    if (await canLaunchUrl(phoneUri)) {
      await launchUrl(phoneUri);
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: Text("Panic SOS Assist")),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text(
              savedPreference == null
                  ? "No SOS Contact Set"
                  : "Saved SOS Contact: ${savedPreference == "helpline" ? "State Helpline ($savedContactOrState)" : "Friend/Family ($savedContactOrState)"}",
              style: TextStyle(fontSize: 18),
              textAlign: TextAlign.center,
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _showChoiceDialog,
              child: Text("Set SOS Contact"),
            ),
            SizedBox(height: 20),
            ElevatedButton(
              onPressed: _callSavedNumber,
              style: ElevatedButton.styleFrom(backgroundColor: Colors.red, padding: EdgeInsets.symmetric(horizontal: 40, vertical: 15)),
              child: Text("SOS CALL", style: TextStyle(fontSize: 20, color: Colors.white)),
            ),
          ],
        ),
      ),
      floatingActionButton: GestureDetector(
        onLongPress: _showChoiceDialog,
        child: FloatingActionButton.extended(
          onPressed: _callSavedNumber,
          label: Text("SOS"),
          icon: Icon(Icons.call),
          backgroundColor: Colors.red,
        ),
      ),
    );
  }
} */